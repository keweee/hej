Compiling Program: C:\DataFlex Projects\FulaTinder\AppSrc\WebApp.src
Memory Available: 24625393664
1>Use AllWebAppClasses.pkg
Using pre-compiled package ALLWEBAPPCLASSES.PKG
Including file: AllWebAppClasses.x64.pkd    (C:\Program Files\DataFlex 20.1\Pkg\AllWebAppClasses.x64.pkd)
34659>Use cConnection.pkg
34659>Use cWebMenuItem.pkg
34659>
34659>Object oApplication is a cApplication
34661>    Object oConnection is a cConnection
34663>        Use LoginEncryption.pkg
Including file: LoginEncryption.pkg    (C:\Program Files\DataFlex 20.1\Pkg\LoginEncryption.pkg)
34663>>>Use cLoginEncryption.pkg
Including file: cLoginEncryption.pkg    (C:\Program Files\DataFlex 20.1\Pkg\cLoginEncryption.pkg)
34663>>>>>Use cCryptographerEx.pkg
34663>>>>>
34663>>>>>Class cLoginEncryption is a cObject
34664>>>>>    
34664>>>>>    Procedure Construct_Object
34666>>>>>        Forward Send Construct_Object
34668>>>>>        // this must be set to a multi (40ish) character random key
34668>>>>>        Property String psEncryptPassword ""
34669>>>>>        
34669>>>>>        Object oDataCrypter is a cCryptographerEx
34671>>>>>            Set piHash to CALG_SHA_256
34672>>>>>            Set piCipher to CALG_AES_256
34673>>>>>            Set psProvider to "" //  Not providing a specific provider gives the default provider for the provider type
34674>>>>>            Set piProvider to PROV_RSA_AES
34675>>>>>        End_Object
34676>>>>>    End_Procedure
34677>>>>>    
34677>>>>>    // This can be augmented to return a password encryption key using any
34677>>>>>    // hidden mechanism desired.
34677>>>>>    Function GetEncryptionPassword Returns String
34679>>>>>        String sPassword
34679>>>>>        Get psEncryptPassword to sPassword
34680>>>>>        Function_Return sPassword
34681>>>>>    End_Function
34682>>>>>    
34682>>>>>    // Encrypts a string into an unreadable hash that can later be decrypted using DecryptKey.
34682>>>>>    //
34682>>>>>    // Params:
34682>>>>>    //   sPlainText     String to encrypt.
34682>>>>>    // Returns:
34682>>>>>    //   Base64 encoded hash.
34682>>>>>    Function EncryptPassword String sPlainText Returns String
34684>>>>>        String sEncryptPassword sBase64
34684>>>>>        UChar[] ucBinary
34685>>>>>        Pointer pBase64
34685>>>>>        Integer iVoid
34685>>>>>        
34685>>>>>        //  Encrypt Key
34685>>>>>        Get GetEncryptionPassword to sEncryptPassword
34686>>>>>        If (sEncryptPassword = "") Begin
34688>>>>>            Error DFERR_PROGRAM "No encryption password set"
34689>>>>>>
34689>>>>>        End
34689>>>>>>
34689>>>>>        
34689>>>>>        Get Encrypt of oDataCrypter (StringToUCharArray(sEncryptPassword)) (StringToUCharArray(sPlainText)) to ucBinary
34690>>>>>        
34690>>>>>        If (SizeOfArray(ucBinary) = 0) Begin
34692>>>>>            Error DFERR_PROGRAM "Unable to encrypt database login password"
34693>>>>>>
34693>>>>>            Function_Return ""
34694>>>>>        End
34694>>>>>>
34694>>>>>        
34694>>>>>        //  Encode binary hash to Base64
34694>>>>>        Move (Base64Encode(AddressOf(ucBinary), SizeOfArray(ucBinary))) to pBase64
34695>>>>>        Move (PointerToString(pBase64)) to sBase64
34696>>>>>        Move (Free(pBase64)) to iVoid
34697>>>>>        
34697>>>>>        Function_Return sBase64
34698>>>>>    End_Function
34699>>>>>    
34699>>>>>    
34699>>>>>    // Decrypts the unreadable hash generated by EncryptKey into a readable string.
34699>>>>>    //
34699>>>>>    // Params:
34699>>>>>    //   sBase64EncryptedPassword       Base64 Encrypted password
34699>>>>>    // Returns:
34699>>>>>    //   Readable plain text password
34699>>>>>    Function DecryptPassword String sBase64EncryptedPassword Returns String
34701>>>>>        String sEncryptPassword
34701>>>>>        UChar[] ucBinary ucPlain
34703>>>>>        Boolean bIsHex
34703>>>>>        Integer iLen iVoid
34703>>>>>        Pointer pBinary
34703>>>>>        
34703>>>>>        If (sBase64EncryptedPassword <> "") Begin
34705>>>>>            //  Decode from Base64
34705>>>>>            Move (Base64Decode(AddressOf(sBase64EncryptedPassword), &iLen)) to pBinary
34706>>>>>            
34706>>>>>            Move (ResizeArray(ucBinary, iLen, 0)) to ucBinary
34707>>>>>            Move (MemCopy(AddressOf(ucBinary), pBinary, iLen)) to iVoid
34708>>>>>                        
34708>>>>>            Move (Free(pBinary)) to iVoid
34709>>>>>            
34709>>>>>            //  Encrypted binary hash to string
34709>>>>>            Get GetEncryptionPassword to sEncryptPassword
34710>>>>>            Get Decrypt of oDataCrypter (StringToUCharArray(sEncryptPassword)) ucBinary to ucPlain
34711>>>>>        End
34711>>>>>>
34711>>>>>        
34711>>>>>        Function_Return (UCharArrayToString(ucPlain))
34712>>>>>    End_Function
34713>>>>>End_Class
34714>>>
34714>>>Object oLoginEncryption is a cLoginEncryption
34716>>>
34716>>>    // this must be created in your appsrc directory and must contain an encryption
34716>>>    // key that is set to psEncryptPassword. It will look something like this
34716>>>    //
34716>>>    // Set psEncryptPassword to "JchUAo7W@r.b{<Yk~OONi0nq=sMi[*Rn[A-`Vo)q"
34716>>>    //  
Including file: LoginEncryptionKey.inc    (C:\DataFlex Projects\FulaTinder\AppSrc\LoginEncryptionKey.inc)
34716>>>>// Studio generated login encryption key
34716>>>>Set psEncryptPassword to "Y_}oi2<1cUc+TJRG^OnPuYVo}{%40)aX00jIf6V_"
34717>>>>
34717>>>    
34717>>>    // use this to register this object to your cConnection Object. This object
34717>>>    // must be created after the cConnection object
34717>>>    Move Self to ghoLoginEncryption
34718>>>End_Object
34719>    End_Object
34720>End_Object
34721>
34721>Object oWebApp is a cWebApp
34723>    Set psTheme to "Df_Material"
34724>    Set peAlignView to alignCenter
34725>    
34725>    // It is important to set this so that all views will default
34725>    // to drill down style views.
34725>    Set peApplicationStyle to wvsDrillDown   
34726>    Set peApplicationStateMode to asmHistoryAndUrls 
34727>    Set psEncryptPassword to ":x+863k9@Ecl:>tK>(%H87O*qDjh6>rvO#K<Hp0R"
34728>    Set peLoginMode to lmLoginSupported
34729>
34729>    Object oViewStack is a cWebViewStack
34731>    End_Object
34732>    
34732>    Procedure HideHeader
34735>        WebSet pbRender of oHeaderPanel to False
34736>    End_Procedure
34737>
34737>    Procedure ShowHeader
34740>        WebSet pbRender of oHeaderPanel to True 
34741>    End_Procedure
34742>
34742>    Object oHeaderPanel is a cWebPanel
34744>        Set peRegion to prTop
34745>        Set psCSSClass to "HeaderPanel"
34746>        
34746>        Object oMenuPanel is a cWebPanel
34748>            Set peRegion to prLeft
34749>            Set piWidth to 50
34750>            
34750>            Object oMenuButton is a cWebMenuButton
34752>                Set piMenuHeight to 500
34753>
34753>                Object oDashboard_itm is a cWebMenuItem
34755>                    Set psCaption to C_$Dashboard
34756>                    
34756>                    WebRegisterPath ntNavigateBegin oDashboard
34762>
34762>                    Procedure OnClick
34765>                        Send NavigatePath
34766>                    End_Procedure
34767>                End_Object
34768>
34768>                Object oViewMenu is a cWebMenuItem
34770>                    Set psCaption to C_$View
34771>
34771>                    Object oPersonerItem1 is a cWebMenuItem
34773>                        Set psCaption to "Personer"
34774>
34774>                        WebRegisterPath ntNavigateBegin oPersonSelect
34780>
34780>                        Procedure OnClick
34783>                            Forward Send OnClick
34785>                                Send NavigatePath
34786>                        End_Procedure
34787>                    End_Object
34788>                End_Object
34789>
34789>                Object oSignOut_itm is a cWebMenuItem
34791>                    Set psCaption to C_$LogOut
34792>
34792>                    Procedure OnClick
34795>                        Send RequestLogOut of ghoWebSessionManager
34796>                    End_Procedure
34797>                End_Object
34798>            End_Object  
34799>
34799>            Object oBackButton is a cWebButton
34801>                Set psCSSClass to "WebBack_Icon"
34802>                Set pbRender to False
34803>                
34803>                Procedure OnClick
34806>                    Handle hoTop
34806>                    
34806>                    Get TopViewHandle of oViewStack to hoTop
34807>                    If (hoTop > 0) Begin
34809>                        Send NavigateCancel of hoTop 
34810>                    End
34810>                End_Procedure
34811>            End_Object
34812>            
34812>            Send AddClient of oViewStack Self
34813>                
34813>            Procedure OnUpdateViewStack
34816>                Handle hoTop hoDflt
34816>                Integer eMode
34816>                Boolean bTop
34816>                
34816>                WebGet peMode of ghoWebApp to eMode
34819>                
34819>                Get TopViewHandle of oViewStack to hoTop
34820>                Get GetDefaultView to hoDflt
34821>                Move (hoTop=0 or hoTop=hoDflt) to bTop
34822>                
34822>                WebSet pbRender of oBackButton to (not(bTop) and eMode >= rmMobile)
34823>                WebSet pbRender of oMenuButton to (bTop or eMode < rmMobile)
34824>            End_Procedure
34825>
34825>        End_Object
34826>
34826>        Object oCaptionPanel is a cWebPanel
34828>            Set piColumnCount to 12
34829>
34829>            Object oCaptionBreadcrumb is a cWebBreadcrumb
34831>                Set peBreadcrumbStyle to crumbCaption
34832>                WebSetResponsive peBreadcrumbStyle rmMobile to crumbDropDown
34833>            End_Object         
34834>        End_Object
34835>        
34835>        Object oActionPanel is a cWebPanel
34837>            Set peRegion to prRight
34838>            Set piColumnCount to 1
34839>            Set piWidth to 120
34840>
34840>            Object oMainActions is a cWebActionBar
34842>                Set psGroupName to "MainActions"
34843>
34843>                Set piColumnSpan to 0
34844>                Set peAlign to alignRight
34845>            End_Object
34846>        End_Object
34847>
34847>        Object oBreadcrumbPanel is a cWebPanel
34849>            Set peRegion to prBottom
34850>            
34850>            Object oHorizontalBreadcrumb is a cWebBreadcrumb
34852>                WebSetResponsive pbRender rmMobile to False
34853>            End_Object         
34854>        End_Object
34855>
34855>    End_Object    
34856>
34856>    Use SessionManager.wo
Including file: SessionManager.wo    (C:\DataFlex Projects\FulaTinder\AppSrc\SessionManager.wo)
34856>>>Use cWebSessionManagerStandard.pkg
Including file: cWebSessionManagerStandard.pkg    (C:\Program Files\DataFlex 20.1\Pkg\cWebSessionManagerStandard.pkg)
34856>>>>>Use cWebSessionManager.pkg
34856>>>>>Use cWebAppSessionDataDictionary.dd
Including file: cWebAppSessionDataDictionary.dd    (C:\Program Files\DataFlex 20.1\Pkg\cWebAppSessionDataDictionary.dd)
34856>>>>>>>Use DataDict.pkg
34856>>>>>>>
34856>>>>>>>Open WebAppSession
Including file: WebAppSession.fd    (C:\DataFlex Projects\FulaTinder\DDSrc\WebAppSession.fd)
34858>>>>>>>Open WebAppUser
Including file: WebAppUser.fd    (C:\DataFlex Projects\FulaTinder\DDSrc\WebAppUser.fd)
34860>>>>>>>
34860>>>>>>>Class cWebAppSessionDataDictionary is a DataDictionary
34861>>>>>>>    
34861>>>>>>>    Procedure Construct_Object
34863>>>>>>>        Forward Send Construct_Object
34865>>>>>>>        Set Main_File to WebAppSession.File_Number
34866>>>>>>>
34866>>>>>>>        Set Add_Server_File to WebAppUser.File_Number
34867>>>>>>>
34867>>>>>>>        Set ParentNullAllowed WebAppUser.File_Number to True
34868>>>>>>>
34868>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
34869>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
34870>>>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
34871>>>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
34872>>>>>>>
34872>>>>>>>        Set Field_Option Field WebAppSession.Active DD_RETAIN to True
34873>>>>>>>        Set Field_Checkbox_Values Field WebAppSession.Active to "Y" "N"
34874>>>>>>>        Set Field_Error Field WebAppSession.Active to 500 "Invalid WebAppSession Active State"
34875>>>>>>>
34875>>>>>>>    End_Procedure
34876>>>>>>>
34876>>>>>>>    Procedure Creating
34878>>>>>>>        DateTime dtCurrentDateTime
34878>>>>>>>        
34878>>>>>>>        Forward Send Creating
34880>>>>>>>        
34880>>>>>>>        //  Init usecounter
34880>>>>>>>        Move 0 to WebAppSession.UseCount
34881>>>>>>>        
34881>>>>>>>        //  Set the creation and access time to the current time
34881>>>>>>>        Move (CurrentDateTime()) to dtCurrentDateTime
34882>>>>>>>    
34882>>>>>>>        Get TimeToString dtCurrentDateTime to WebAppSession.CreateTime
34883>>>>>>>        Get TimeToString dtCurrentDateTime to WebAppSession.LastAccessTime
34884>>>>>>>        
34884>>>>>>>        Move dtCurrentDateTime to WebAppSession.CreateDate
34885>>>>>>>        Move dtCurrentDateTime to WebAppSession.LastAccessDate
34886>>>>>>>    End_Procedure
34887>>>>>>>    
34887>>>>>>>    
34887>>>>>>>    
34887>>>>>>>    //
34887>>>>>>>    //  Converts the given time to an string that can be saved in the database.
34887>>>>>>>    //
34887>>>>>>>    //  Params:
34887>>>>>>>    //      dtTime  Time to convert
34887>>>>>>>    //  Returns:
34887>>>>>>>    //      String with "HH:MM:SS" format
34887>>>>>>>    //
34887>>>>>>>    Function TimeToString DateTime dtTime Returns String
34889>>>>>>>        String sHours sMinutes sSeconds
34889>>>>>>>        
34889>>>>>>>        //  Extract parts
34889>>>>>>>        Move (String(DateGetHour(dtTime))) to sHours
34890>>>>>>>        Move (String(DateGetMinute(dtTime))) to sMinutes
34891>>>>>>>        Move (String(DateGetSecond(dtTime))) to sSeconds
34892>>>>>>>        
34892>>>>>>>        //  Fill out with 0
34892>>>>>>>        If (Length(sHours) = 1) ;            Move ("0" + sHours) to sHours
34895>>>>>>>        If (Length(sMinutes) = 1) ;            Move ("0" + sMinutes) to sMinutes
34898>>>>>>>        If (Length(sSeconds) = 1) ;            Move ("0" + sSeconds) to sSeconds
34901>>>>>>>        
34901>>>>>>>        Function_Return (sHours + ":" + sMinutes + ":" + sSeconds)
34902>>>>>>>    End_Function
34903>>>>>>>    
34903>>>>>>>    //
34903>>>>>>>    //  Sets the time of the datetime variable to the time in the string.
34903>>>>>>>    //
34903>>>>>>>    //  Params:
34903>>>>>>>    //      dtTime  Datetime variable to add time to
34903>>>>>>>    //      sTimeString String with time in the format "HH:MM:SS"
34903>>>>>>>    //  Returns:
34903>>>>>>>    //      dtDateTime with the loaded time
34903>>>>>>>    //
34903>>>>>>>    Function StringToTime DateTime dtTime String sTimeString Returns DateTime
34905>>>>>>>        String sHours sMinutes sSeconds
34905>>>>>>>        
34905>>>>>>>        //  Extract parts
34905>>>>>>>        Move (Mid(sTimeString, 2, 1)) to sHours
34906>>>>>>>        Move (Mid(sTimeString, 2, 4)) to sMinutes
34907>>>>>>>        Move (Mid(sTimeString, 2, 7)) to sSeconds
34908>>>>>>>        
34908>>>>>>>        //  Set to DateTime
34908>>>>>>>        Move (DateSetHour(dtTime, (Integer(sHours)))) to dtTime
34909>>>>>>>        Move (DateSetMinute(dtTime, (Integer(sMinutes)))) to dtTime
34910>>>>>>>        Move (DateSetSecond(dtTime, (Integer(sSeconds)))) to dtTime
34911>>>>>>>        
34911>>>>>>>        Function_Return dtTime
34912>>>>>>>    End_Function
34913>>>>>>>
34913>>>>>>>End_Class
34914>>>>>Use cWebAppUserDataDictionary.dd
Including file: cWebAppUserDataDictionary.dd    (C:\Program Files\DataFlex 20.1\Pkg\cWebAppUserDataDictionary.dd)
34914>>>>>>>Use DataDict.pkg
34914>>>>>>>Open WebAppUser
34916>>>>>>>Open WebAppSession
34918>>>>>>>
34918>>>>>>>Class cWebAppUserDataDictionary is a DataDictionary
34919>>>>>>>    
34919>>>>>>>    Procedure Construct_Object
34921>>>>>>>        Forward Send Construct_Object
34923>>>>>>>        Set Main_File to WebAppUser.File_Number
34924>>>>>>>
34924>>>>>>>        Set Add_Client_File to WebAppSession.File_Number
34925>>>>>>>
34925>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
34926>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
34927>>>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
34928>>>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
34929>>>>>>>    End_Procedure
34930>>>>>>>
34930>>>>>>>End_Class
34931>>>>>
34931>>>>>Class cWebSessionManagerStandard is a cWebSessionManager
34932>>>>>    
34932>>>>>    Procedure Construct_Object
34934>>>>>        Handle hoUserDD hoSessionDD
34934>>>>>        
34934>>>>>        Forward Send Construct_Object
34936>>>>>        
34936>>>>>        Property Handle phoUserDD 0      // Handle to the WebAppUser DDO
34937>>>>>        Property Handle phoSessionDD 0   // Handle to the WebAppSession DDO        
34938>>>>>        
34938>>>>>        Get Create (RefClass(cWebAppUserDataDictionary)) to hoUserDD
34939>>>>>        Get Create (RefClass(cWebAppSessionDataDictionary)) to hoSessionDD
34940>>>>>        Set DDO_Server of hoSessionDD to hoUserDD
34941>>>>>
34941>>>>>        Set phoUserDD to hoUserDD
34942>>>>>        Set phoSessionDD to hoSessionDD
34943>>>>>        Property Boolean pbCreatingNewSession False
34944>>>>>        Property String psLoginName
34945>>>>>        Property String psUserName ""
34946>>>>>        Property Integer piUserRights 0
34947>>>>>    End_Procedure
34948>>>>>    
34948>>>>>    Function CreateSession String sRemoteAddress Returns String
34950>>>>>        String sSessionKey
34950>>>>>        Integer iErr
34950>>>>>        Boolean bLogWebSession
34950>>>>>        Handle hoSessionDD       
34950>>>>>        Get phoSessionDD to hoSessionDD
34951>>>>>        
34951>>>>>        //  Get session key
34951>>>>>        Forward Get CreateSession sRemoteAddress to sSessionKey
34953>>>>>        
34953>>>>>        Get pbLogWebSession to bLogWebSession
34954>>>>>        If not bLogWebSession Begin
34956>>>>>            Function_Return sSessionKey        
34957>>>>>        End
34957>>>>>>
34957>>>>>
34957>>>>>        //  Store session
34957>>>>>        Send Clear of hoSessionDD
34958>>>>>        Set Field_Changed_Value of hoSessionDD Field WebAppSession.SessionKey to sSessionKey
34959>>>>>        Set Field_Changed_Value of hoSessionDD Field WebAppSession.RemoteAddress to sRemoteAddress
34960>>>>>        Set Field_Changed_Value of hoSessionDD Field WebAppSession.Active to "Y"
34961>>>>>        Get Request_Validate of hoSessionDD to iErr
34962>>>>>        If (iErr) Begin
34964>>>>>            // this should not happen. If it does its a programming error
34964>>>>>            Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
34965>>>>>>
34965>>>>>            Function_Return ""
34966>>>>>        End
34966>>>>>>
34966>>>>>        Send Request_Save of hoSessionDD
34967>>>>>        If (Err) Begin
34969>>>>>            // this shouldn't happen, if it does likely a duplicate session key issue, even through request_save already gave an error we give another one to make tracking down easier
34969>>>>>            Error DFERR_PROGRAM C_$WebAppSesionSaveFailed
34970>>>>>>
34970>>>>>            Function_Return ""
34971>>>>>        End
34971>>>>>>
34971>>>>>       
34971>>>>>        Function_Return sSessionKey        
34972>>>>>    End_Function
34973>>>>>    
34973>>>>>    
34973>>>>>    Function ValidateSession String sSessionKey Boolean bOptLoadWebApp Returns Boolean
34975>>>>>        DateTime dtLastAccess dtCurrent
34975>>>>>        TimeSpan tsDiff
34975>>>>>        Integer iErr iSessionTimeout iSpanMinutes
34975>>>>>        Boolean bResult bCreatingNewSession
34975>>>>>        Boolean bLogWebSession bLoadWebApp
34975>>>>>        Integer eLoginMode
34975>>>>>        String sTime
34975>>>>>        Handle hoSessionDD hoUserDD       
34975>>>>>        
34975>>>>>        Move False to bLoadWebApp
34976>>>>>        If (num_arguments >= 2) Begin
34978>>>>>            Move bOptLoadWebApp to bLoadWebApp
34979>>>>>        End
34979>>>>>>
34979>>>>>        
34979>>>>>        Get phoSessionDD to hoSessionDD
34980>>>>>        Get phoUserDD to hoUserDD
34981>>>>>        
34981>>>>>        Get pbLogWebSession to bLogWebSession
34982>>>>>        Get peLoginMode to eLoginMode
34983>>>>>        
34983>>>>>        // for this object, you can only disable logging if login completely is disabled
34983>>>>>        If (not(bLogWebSession) and (eLoginMode<>lmLoginNone)) Begin
34985>>>>>            Error DFERR_PROGRAM C_$WebSessionLoggingMustBeEnabled
34986>>>>>>
34986>>>>>            Function_Return False
34987>>>>>        End
34987>>>>>>
34987>>>>>
34987>>>>>        //  Clear session properties
34987>>>>>        Set psSessionKey to ""
34988>>>>>        Send UpdateSessionProperties True
34989>>>>>        
34989>>>>>        If not bLogWebSession Begin
34991>>>>>            Forward Get ValidateSession sSessionKey to bResult
34993>>>>>            Function_Return bResult
34994>>>>>        End        
34994>>>>>>
34994>>>>>        
34994>>>>>        Move False to bResult
34995>>>>>        Get piSessionTimeout to iSessionTimeout 
34996>>>>>        
34996>>>>>        //  Check if session exists
34996>>>>>        Send Clear of hoSessionDD
34997>>>>>        Move sSessionKey to WebAppSession.SessionKey
34998>>>>>        Send Find of hoSessionDD EQ Index.1
34999>>>>>            
34999>>>>>        If (Found) Begin
35001>>>>>            //  Calculate timespan between now and last access time
35001>>>>>            Move (CurrentDateTime()) to dtCurrent
35002>>>>>            Move WebAppSession.LastAccessDate to dtLastAccess
35003>>>>>            Get StringToTime of hoSessionDD dtLastAccess WebAppSession.LastAccessTime to dtLastAccess
35004>>>>>            Move (dtCurrent - dtLastAccess) to tsDiff
35005>>>>>            Move (SpanTotalMinutes(tsDiff)) to iSpanMinutes
35006>>>>>            
35006>>>>>            //  Check if session didn't time out
35006>>>>>            If (IsDateValid(dtLastAccess) and (iSessionTimeout <= 0 or (iSpanMinutes < iSessionTimeout)) and WebAppSession.Active = "Y") Begin
35008>>>>>                Forward Get ValidateSession sSessionKey to bResult
35010>>>>>                   
35010>>>>>                If (bResult) Begin
35012>>>>>                    //  Update session record
35012>>>>>                    Get TimeToString of hoSessionDD dtCurrent to sTime 
35013>>>>>                    Set Field_Changed_Value of hoSessionDD Field WebAppSession.LastAccessDate to dtCurrent
35014>>>>>                    Set Field_Changed_Value of hoSessionDD Field WebAppSession.LastAccessTime to sTime
35015>>>>>                    Set Field_Changed_Value of hoSessionDD Field WebAppSession.UseCount to (WebAppSession.UseCount + 1)
35016>>>>>                    Get Request_Validate of hoSessionDD to iErr
35017>>>>>                    If (iErr) Begin
35019>>>>>                        // this should not happen. If it does its a programming error
35019>>>>>                        Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
35020>>>>>>
35020>>>>>                        Function_Return False
35021>>>>>                    End
35021>>>>>>
35021>>>>>                    Send Request_Save of hoSessionDD
35022>>>>>                    
35022>>>>>                    //  Update user properties
35022>>>>>                    Send UpdateSessionProperties False
35023>>>>>                End
35023>>>>>>
35023>>>>>            End
35023>>>>>>
35023>>>>>            Else Begin
35024>>>>>                // Test the Creating New Session Flag to protect against infinite recursion....
35024>>>>>                Get pbCreatingNewSession to bCreatingNewSession
35025>>>>>                
35025>>>>>                If (not(bCreatingNewSession)) Begin
35027>>>>>                    Set pbCreatingNewSession to True                    
35028>>>>>                    Get RecreateSession of ghoWebApp to bResult
35029>>>>>                    Set pbCreatingNewSession to False
35030>>>>>                    
35030>>>>>                    If (not(bLoadWebApp)) Begin
35032>>>>>                        Move False to bResult   //  We can only continue immediately if we were loading the webapp, other operations are not allowed!
35033>>>>>                        Error DFERR_WEBAPP_SESSION_TIMEOUT "Your application session has timed out or is inactive, please login again."
35034>>>>>>
35034>>>>>                        Send NavigateRefresh of ghoWebApp          // refresh the WebApp at the client (triggers a login)
35035>>>>>                    End
35035>>>>>>
35035>>>>>                End
35035>>>>>>
35035>>>>>            End
35035>>>>>>
35035>>>>>        End
35035>>>>>>
35035>>>>>        Else Begin
35036>>>>>            Error DFERR_WEBAPP_BAD_SESSION_KEY "Session key not known (reload page to recreate session)"
35037>>>>>>
35037>>>>>        End
35037>>>>>>
35037>>>>>        
35037>>>>>        Function_Return bResult
35038>>>>>    End_Function
35039>>>>>    
35039>>>>>    Function UserLogin String sLoginName String sPassword Returns Boolean
35041>>>>>        String sSessionKey sUserPassword
35041>>>>>        Handle hoSessionDD hoUserDD
35041>>>>>        Boolean bMatch  
35041>>>>>        
35041>>>>>        Get phoSessionDD to hoSessionDD
35042>>>>>        Get phoUserDD to hoUserDD
35043>>>>>        Integer iErr eLoginMode
35043>>>>>        
35043>>>>>        // Refind session record
35043>>>>>        Get psSessionKey to sSessionKey
35044>>>>>        Send Clear of hoSessionDD
35045>>>>>        Move sSessionKey to WebAppSession.SessionKey
35046>>>>>        Send Find of hoSessionDD EQ Index.1
35047>>>>>        
35047>>>>>        If (Found and WebAppSession.SessionKey = sSessionKey) Begin
35049>>>>>            Get peLoginMode to eLoginMode
35050>>>>>            
35050>>>>>            //  Find the user
35050>>>>>            Move sLoginName to WebAppUser.LoginName
35051>>>>>            Send Find of hoUserDD EQ Index.1
35052>>>>>            
35052>>>>>            // Check username and password
35052>>>>>            If (Found and (Lowercase(sLoginName) = Lowercase(Trim(WebAppUser.LoginName)))) Begin
35054>>>>>                Get Field_Current_Value of hoUserDD Field WebAppUser.Password to sUserPassword
35055>>>>>                Get ComparePasswords (Trim(sUserPassword)) (Trim(sPassword)) to bMatch
35056>>>>>                
35056>>>>>                If (bMatch) Begin
35058>>>>>                    // Store the login
35058>>>>>                    Set Field_Changed_Value of hoUserDD Field WebAppUser.LastLogin to (CurrentDateTime())
35059>>>>>                    Get Request_Validate of hoSessionDD to iErr
35060>>>>>                    If (iErr) Begin
35062>>>>>                        // this should not happen. If it does its a programming error
35062>>>>>                        Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
35063>>>>>>
35063>>>>>                        Function_Return False
35064>>>>>                    End
35064>>>>>>
35064>>>>>                    
35064>>>>>                    Send Request_Save of hoSessionDD
35065>>>>>                    
35065>>>>>                    // Update session properties
35065>>>>>                    Send UpdateSessionProperties False
35066>>>>>                    Send NotifyChangeRights
35067>>>>>                    Function_Return True
35068>>>>>                End
35068>>>>>>
35068>>>>>                Else Begin
35069>>>>>                    //  We should rely directly on this buffer elsewhere but just be sure
35069>>>>>                    Send Clear of hoUserDD
35070>>>>>                End
35070>>>>>>
35070>>>>>            End
35070>>>>>>
35070>>>>>        End
35070>>>>>>
35070>>>>>          
35070>>>>>        Function_Return False
35071>>>>>    End_Function
35072>>>>>    
35072>>>>>    Function IsLoggedIn Returns Boolean
35074>>>>>        String sLoginName
35074>>>>>        Boolean bLogWebSession bLoggedIn
35074>>>>>        
35074>>>>>        Get pbLogWebSession to bLogWebSession
35075>>>>>        If not bLogWebSession Begin
35077>>>>>            Forward Get IsLoggedIn to bLoggedIn
35079>>>>>            Function_Return bLoggedIn
35080>>>>>        End
35080>>>>>>
35080>>>>>        
35080>>>>>        Get psLoginName to sLoginName
35081>>>>>        
35081>>>>>        Function_Return (sLoginName <> "")
35082>>>>>    End_Function
35083>>>>>    
35083>>>>>    
35083>>>>>    //
35083>>>>>    // This procedure is called when validating a session and after logging in. Its purpose is to 
35083>>>>>    // update properties based on the session and user data. Augment this function to update 
35083>>>>>    // properties based on the session / user table. Note that WebAppUser and WebAppSession contain
35083>>>>>    // the right records when this procedure is called.
35083>>>>>    //
35083>>>>>    // Params:
35083>>>>>    //      bClear   True if the procedure is called before session validation to clear properties.
35083>>>>>    //
35083>>>>>    Procedure UpdateSessionProperties Boolean bClear
35085>>>>>        Handle hoUserDD
35085>>>>>        
35085>>>>>        Get phoUserDD to hoUserDD
35086>>>>>        
35086>>>>>        //  Update user properties
35086>>>>>        If (not(bClear) and HasRecord(hoUserDD)) Begin
35088>>>>>            Set psUsername to (Trim(WebAppUser.FullName))
35089>>>>>            Set psLoginName to (Trim(WebAppUser.LoginName))
35090>>>>>            Set piUserRights to WebAppUser.Rights
35091>>>>>            
35091>>>>>            Send OnSessionPropertiesSet 
35092>>>>>        End
35092>>>>>>
35092>>>>>        Else Begin
35093>>>>>            Set psUsername to ""
35094>>>>>            Set psLoginName to ""
35095>>>>>            Set piUserRights to 0
35096>>>>>            
35096>>>>>            Send OnSessionPropertiesClear
35097>>>>>        End
35097>>>>>>
35097>>>>>    End_Procedure
35098>>>>>    
35098>>>>>    //
35098>>>>>    // This function is called to perform the password comparison. It gets the entered password and
35098>>>>>    // the password value of the user table as parameters. The WebAppUser buffer will contain the
35098>>>>>    // right record. This function can be augmented to implement security features like storing the
35098>>>>>    // password as a hashed value.
35098>>>>>    //
35098>>>>>    // Params:
35098>>>>>    //      sUserPassword       Value of the WebAppUser.Password field.
35098>>>>>    //      sEnteredPassword    Value entered on the login screen during login.
35098>>>>>    //
35098>>>>>    Function ComparePasswords String sUserPassword String sEnteredPassword Returns Boolean
35100>>>>>        Function_Return (sUserPassword = sEnteredPassword)
35101>>>>>    End_Function
35102>>>>>    
35102>>>>>    Procedure OnSessionPropertiesSet
35104>>>>>        //  Empty event stub
35104>>>>>    End_Procedure
35105>>>>>    
35105>>>>>    Procedure OnSessionPropertiesClear
35107>>>>>        //  Empty event stub
35107>>>>>    End_Procedure
35108>>>>>    
35108>>>>>    Procedure EndSession
35110>>>>>        Integer iErr
35110>>>>>        Boolean bLogWebSession
35110>>>>>        Handle hoSessionDD       
35110>>>>>        
35110>>>>>        Get phoSessionDD to hoSessionDD
35111>>>>>        Get pbLogWebSession to bLogWebSession
35112>>>>>        If not bLogWebSession Begin
35114>>>>>            Forward Send EndSession
35116>>>>>            Procedure_Return
35117>>>>>        End
35117>>>>>>
35117>>>>>            
35117>>>>>        //  Check if session exists
35117>>>>>        Send Clear of hoSessionDD
35118>>>>>        Get psSessionKey to WebAppSession.SessionKey
35119>>>>>        
35119>>>>>        Send Find of hoSessionDD EQ Index.1
35120>>>>>        If (Found) Begin
35122>>>>>            Set Field_Changed_Value of hoSessionDD Field WebAppSession.Active to "N"
35123>>>>>            Get Request_Validate of hoSessionDD to iErr
35124>>>>>            If (iErr) Begin
35126>>>>>                // this should not happen. If it does its a programming error
35126>>>>>                Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
35127>>>>>>
35127>>>>>                Procedure_Return
35128>>>>>            End
35128>>>>>>
35128>>>>>            Send Request_Save of hoSessionDD
35129>>>>>        End
35129>>>>>>
35129>>>>>    End_Procedure
35130>>>>>
35130>>>>>End_Class
35131>>>>>
35131>>>
35131>>>Object oSessionManager is a cWebSessionManagerStandard
35133>>>End_Object
35134>>>
35134>>>
35134>    Use Login.wo
Including file: Login.wo    (C:\DataFlex Projects\FulaTinder\AppSrc\Login.wo)
35134>>>Use cWebView.pkg
35134>>>Use cWebForm.pkg
35134>>>Use cWebButton.pkg
35134>>>Use cWebPanel.pkg
35134>>>Use cWebLabel.pkg
35134>>>Use cWebSpacer.pkg
35134>>>Use cWebImage.pkg
35134>>>
35134>>>Object oLogin is a cWebView
35136>>>    Set piMinWidth to 250
35137>>>    Set piMaxWidth to 420
35138>>>    Set pbLoginModeEnforced to False
35139>>>    Set piColumnCount to 12
35140>>>    Set psCSSClass to "LoginView"
35141>>>    Set pbServerOnSubmit to True
35142>>>    
35142>>>    Set psStateViewName to "Login"
35143>>>    Set pbStateReplace to True  // Always replace the state so the login never becomes its own history item
35144>>>    
35144>>>    Property String psPrevStateHash ""  // Remember the state hash that the user navigated too so we can redirect after login
35148>>>    
35148>>>    Delegate Set phoLoginView to Self
35150>>>    
35150>>>    Object oTopSpacer is a cWebSpacer
35152>>>        Set pbFillHeight to True
35153>>>        Set piColumnSpan to 12
35154>>>    End_Object
35155>>>    
35155>>>    Object oWarning is a cWebLabel
35157>>>        Set pbVisible to False
35158>>>        Set psCaption to "Invalid User ID or password. \n\rHint: 'Guest' & 'guest'."
35159>>>        Set peAlign to alignCenter
35160>>>        Set piColumnSpan to 12
35161>>>        Set psCSSClass to "LoginWarning"
35162>>>    End_Object
35163>>>    
35163>>>    Object oLogo is a cWebImage
35165>>>        Set piColumnSpan to 10
35166>>>        Set psUrl to "images/DF_Logo_Retina.png"
35167>>>        Set pePosition to wiFit
35168>>>        Set piColumnIndex to 1
35169>>>        Set piHeight to 160
35170>>>        
35170>>>        WebSetResponsive piHeight rmMobile to 100  // Best for small smart phones
35171>>>    End_Object
35172>>>    
35172>>>    Object oLoginName is a cWebForm
35174>>>        Set psLabel to "User ID:"
35175>>>        Set peLabelPosition to lpTop
35176>>>        Set piMaxLength to 20
35177>>>        Set piColumnIndex to 1
35178>>>        Set pbShowLabel to False
35179>>>        Set psPlaceHolder to "loginname"
35180>>>        Set piColumnSpan to 10
35181>>>        Set psAutoComplete to "username"
35182>>>    End_Object
35183>>>    
35183>>>    Object oPassword is a cWebForm
35185>>>        Set psLabel to "Password:"
35186>>>        Set pbPassword to True
35187>>>        Set peLabelAlign to alignLeft
35188>>>        Set piMaxLength to 20
35189>>>        Set peLabelPosition to lpTop
35190>>>        Set pbShowLabel to False
35191>>>        Set psPlaceHolder to "password"
35192>>>        Set piColumnSpan to 10
35193>>>        Set piColumnIndex to 1
35194>>>        Set psAutoComplete to "current-password"
35195>>>    End_Object
35196>>>    
35196>>>    Object oWebSpacer1 is a cWebSpacer
35198>>>        Set piColumnSpan to 12
35199>>>        Set piHeight to 10
35200>>>    End_Object
35201>>>    
35201>>>    Object oLoginButton is a cWebButton
35203>>>        Set pbShowLabel to False
35204>>>        Set psCaption to "sign in"
35205>>>        Set pbServerOnClick to True
35206>>>        Set piColumnSpan to 10
35207>>>        Set piColumnIndex to 1
35208>>>        
35208>>>        Procedure OnClick
35211>>>            Send DoLogin
35212>>>        End_Procedure
35213>>>    End_Object
35214>>>    
35214>>>    Object oBottomSpacer is a cWebSpacer
35216>>>        Set pbFillHeight to True
35217>>>        Set piColumnSpan to 12
35218>>>    End_Object
35219>>>    
35219>>>    Procedure DoLogin
35222>>>        String sLoginName sPassword sPrevStateHash
35222>>>        Boolean bResult
35222>>>        
35222>>>        WebGet psValue of oLoginName to sLoginName
35225>>>        WebGet psValue of oPassword to sPassword
35228>>>        
35228>>>        Get UserLogin of ghoWebSessionManager sLoginName sPassword to bResult
35229>>>        
35229>>>        If (bResult) Begin
35231>>>            Send Hide of oLogin
35232>>>            Send ShowHeader of ghoWebApp
35233>>>            WebSet psCSSClass of ghoWebApp to ""
35234>>>            
35234>>>            WebGet psPrevStateHash to sPrevStateHash
35237>>>            Send NavigateToStateHash of ghoWebApp sPrevStateHash True
35238>>>            
35238>>>            // clear the login values. we don't want to return the login id & password as synchronized properties....
35238>>>            WebSet psValue of oLoginName to ""
35239>>>            WebSet psValue of oPassword  to ""
35240>>>            WebSet pbVisible of oWarning to False
35241>>>        End
35241>>>>
35241>>>        Else Begin
35242>>>            WebSet pbVisible of oWarning to True
35243>>>        End
35243>>>>
35243>>>    End_Procedure
35244>>>    
35244>>>    Procedure OnSubmit
35247>>>        Send DoLogin
35248>>>    End_Procedure
35249>>>    
35249>>>    Procedure OnLoad
35252>>>        String sPrevStateHash sView
35252>>>        
35252>>>        Forward Send OnLoad
35254>>>        
35254>>>        //  Store the current state so we can go back to that later (only if it points to a different view)
35254>>>        Get StateHash of ghoWebApp to sPrevStateHash
35255>>>        Send ParseViewStateHash sPrevStateHash (&sView)
35256>>>        If (Lowercase(sView) <> Lowercase(psStateViewName(Self))) Begin
35258>>>            WebSet psPrevStateHash to sPrevStateHash
35259>>>        End
35259>>>>
35259>>>        
35259>>>    End_Procedure
35260>>>    
35260>>>    Procedure OnBeforeShow
35263>>>        //  Hide header & apply nice background style
35263>>>        Send HideHeader to ghoWebApp
35264>>>        WebSet psCSSClass of ghoWebApp to "LoginBackground"
35265>>>    End_Procedure
35266>>>    
35266>>>End_Object
35267>>>
35267>>>
35267>>>
35267>>>
35267>    Use WebResourceManager.wo
Including file: WebResourceManager.wo    (C:\DataFlex Projects\FulaTinder\AppSrc\WebResourceManager.wo)
35267>>>Use cWebResourceManager.pkg
35267>>>
35267>>>Object oWebResourceManager is a cWebResourceManager
35269>>>End_Object
35270>    
35270>    Use Dashboard.wo
Including file: Dashboard.wo    (C:\DataFlex Projects\FulaTinder\AppSrc\Dashboard.wo)
35270>>>Use cWebView.pkg
35270>>>Use cWebPanel.pkg
35270>>>Use cWebForm.pkg
35270>>>Use cWebButton.pkg
35270>>>Use cWebGroup.pkg
35270>>>Use cWebSpacer.pkg
35270>>>Use cWebHtmlBox.pkg
35270>>>Use cWebMenuGroup.pkg
35270>>>Use cWebMenuItem.pkg
35270>>>Use cWebLabel.pkg
35270>>>Use cWebList.pkg
35270>>>Use cWebColumn.pkg
35270>>>
35270>>>Object oDashboard is a cWebView
35272>>>
35272>>>    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
35272>>>    // Add a DDO Structure 
35272>>>    //
35272>>>    // There is no need to synchronize a DD structure on the client so we do
35272>>>    // not set the Server property or send ADDOStructure. We will simply use
35272>>>    // DDO's to mine data and generate HTML for our cWebHTMLBox objects.
35272>>>    // It is the HTML in these objects that is sent to the client each time 
35272>>>    // this page is shown.
35272>>>    //
35272>>>    // Also, it is important for the drill-down Navigation interface that we
35272>>>    // do not set the Server property to some DDO because this will affect 
35272>>>    // constraints in the next view that we navigate to.
35272>>>    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
35272>>>
35272>>>    Set piMaxWidth to 1024
35273>>>    
35273>>>    Set psCaption to "Dashboard"
35274>>>    Set peViewType to vtUndefined
35275>>>    Set pbShowCaption to False
35276>>>    Set psCSSClass to "Dashboard"
35277>>>    
35277>>>    Object oWebMainPanel is a cWebPanel
35279>>>        Set piColumnCount to 24
35280>>>        
35280>>>        // - - - - - - - - - - - - - - -
35280>>>        // Main Panel's Responsive Rules
35280>>>        // - - - - - - - - - - - - - - -
35280>>>        WebSetResponsive piColumnCount rmMobile to 1
35281>>>        WebSetResponsive piColumnCount rmTabletPortrait to 16
35282>>>    
35282>>>        Object oTiles_grp is a cWebGroup
35284>>>            Set piColumnSpan to 8
35285>>>            Set pbShowBorder to False
35286>>>            Set pbShowCaption to False
35287>>>            Set piColumnCount to 12
35288>>>            
35288>>>            Set psCSSClass to "TilesGroup"
35289>>>    
35289>>>            Object oWelcomeTile is a cWebHtmlBox
35291>>>                Set piColumnSpan to 6
35292>>>                Set psCSSClass to "Tile Light"
35293>>>                Set psHtml to '<div Class="WebCon_Sizer"><div class="Tile_Title">Welcome</div><div Class="Tile_Subtitle">--</div></div>'
35294>>>    
35294>>>                Procedure OnLoad
35297>>>                    Send UpdateHTML ('<div class="WebCon_Sizer">' + ;                                     '<div class="Tile_Title">Welcome</div>' +;                                     '<div class="Tile_Subtitle">' - htmlEncode(psUserName(ghoWebSessionManager)) - '</div>' +;                                     '</div>')
35298>>>                End_Procedure
35299>>>                
35299>>>            End_Object
35300>>>    
35300>>>            Object oTile2 is a cWebHtmlBox
35302>>>                Set pbServerOnClick to True
35303>>>                Set piColumnSpan to 6
35304>>>                Set piColumnIndex to 6
35305>>>                Set psCSSClass to "Tile LightAlternate"
35306>>>                Set psHtml to '<div class="WebCon_Sizer" data-ServerOnClick="openview"><div Class="Tile_Title">Tile 2</div><div class="Tile_Subtitle"></div></div>'
35307>>>                                
35307>>>                // WebRegisterPath ntNavigateForwardCustom oYourViewName
35307>>>                
35307>>>                Procedure OnClick String sId String sParam
35310>>>                    Send NavigatePath
35311>>>                End_Procedure
35312>>>                
35312>>>            End_Object
35313>>>    
35313>>>            Object oTile3 is a cWebHtmlBox
35315>>>                Set pbServerOnClick to True
35316>>>                Set piColumnSpan to 6
35317>>>                Set psCSSClass to "Tile Dark"
35318>>>                Set psHtml to '<div class="WebCon_Sizer" data-ServerOnClick="openview"><div Class="Tile_Title">Tile 3</div><div class="Tile_Subtitle"></div></div>'
35319>>>    
35319>>>                // WebRegisterPath ntNavigateForwardCustom oYourViewName
35319>>>                
35319>>>                Procedure OnClick String sId String sParam
35322>>>                    Send NavigatePath
35323>>>                End_Procedure
35324>>>                
35324>>>            End_Object
35325>>>    
35325>>>            Object oTile4 is a cWebHtmlBox
35327>>>                Set pbServerOnClick to True
35328>>>                Set piColumnSpan to 6
35329>>>                Set piColumnIndex to 6
35330>>>                Set psCSSClass to "Tile DarkAlternate"
35331>>>                Set psHtml to '<div class="WebCon_Sizer" data-ServerOnClick="openview"><div Class="Tile_Title">Tile 4</div><div class="Tile_Subtitle"></div></div>'
35332>>>            
35332>>>                // WebRegisterPath ntNavigateForwardCustom oYourViewName
35332>>>                
35332>>>                Procedure OnClick String sId String sParam
35335>>>                    Send NavigatePath
35336>>>                End_Procedure
35337>>>                
35337>>>            End_Object
35338>>>        End_Object
35339>>>    
35339>>>    End_Object
35340>>>    
35340>>>    Procedure OnBeforeShow
35343>>>        // Each time this view is shown we will update the appropriate information.
35343>>>    End_Procedure
35344>>>
35344>>>End_Object
35345>    Use PersonZoom.wo
Including file: PersonZoom.wo    (C:\DataFlex Projects\FulaTinder\AppSrc\PersonZoom.wo)
35345>>>// C:\DataFlex Projects\FulaTinder\AppSrc\PersonZoom.wo
35345>>>// Person
35345>>>//
35345>>>
35345>>>Use cWebView.pkg
35345>>>Use cWebPanel.pkg
35345>>>Use cWebMenuGroup.pkg
35345>>>Use cWebMenuItem.pkg
35345>>>Use cWebForm.pkg
35345>>>
35345>>>Use cPersonDataDictionary.dd
Including file: cPersonDataDictionary.dd    (C:\DataFlex Projects\FulaTinder\DDSrc\cPersonDataDictionary.dd)
35345>>>>>Use DataDict.pkg
35345>>>>>
35345>>>>>Open Person
Including file: Person.fd    (C:\DataFlex Projects\FulaTinder\DDSrc\Person.fd)
35347>>>>>
35347>>>>>Class cPersonDataDictionary is a DataDictionary
35348>>>>>    
35348>>>>>    Procedure Construct_Object
35350>>>>>        Forward Send Construct_Object
35352>>>>>        Set Main_File to Person.File_Number
35353>>>>>
35353>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
35354>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
35355>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
35356>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
35357>>>>>
35357>>>>>        Set Field_Option Field Person.ForNamn DD_REQUIRED to True
35358>>>>>
35358>>>>>        Set Field_Option Field Person.EfterNamn DD_REQUIRED to True
35359>>>>>
35359>>>>>        Set Field_Option Field Person.Alder DD_REQUIRED to True
35360>>>>>
35360>>>>>        Set Field_Option Field Person.Email DD_REQUIRED to True
35361>>>>>
35361>>>>>    End_Procedure
35362>>>>>
35362>>>>>End_Class
35363>>>
35363>>>Object oPersonZoom is a cWebView
35365>>>    Set piColumnCount to 12
35366>>>    Set psCaption to "Person"
35367>>>    Set peWebViewStyle to wvsDrilldown
35368>>>    Set peViewType to vtZoom
35369>>>    Set pbShowCaption to False
35370>>>    Set Verify_Save_Msg to 0
35371>>>    Set piMaxWidth to 1024
35372>>>
35372>>>    Object oPerson_DD is a cPersonDataDictionary
35374>>>    End_Object 
35375>>>
35375>>>    Set Main_DD To oPerson_DD
35376>>>    Set Server  To oPerson_DD
35377>>>
35377>>>
35377>>>    Object oWebMainPanel is a cWebPanel
35379>>>        Set piColumnCount to 12
35380>>>        WebSetResponsive piColumnCount rmMobile to 4
35381>>>
35381>>>        Object oPersonPersonId is a cWebForm
35383>>>            Entry_Item Person.PersonId
35384>>>            Set piColumnSpan to 1
35385>>>            Set piColumnIndex to 0
35386>>>            Set peLabelPosition to lpTop
35387>>>            Set psLabel to "PersonId"
35388>>>        End_Object 
35389>>>
35389>>>        Object oPersonForNamn is a cWebForm
35391>>>            Entry_Item Person.ForNamn
35392>>>            Set piColumnSpan to 7
35393>>>            Set piColumnIndex to 0
35394>>>            Set peLabelPosition to lpTop
35395>>>            Set psLabel to "ForNamn"
35396>>>        End_Object 
35397>>>
35397>>>        Object oPersonEfterNamn is a cWebForm
35399>>>            Entry_Item Person.EfterNamn
35400>>>            Set piColumnSpan to 7
35401>>>            Set piColumnIndex to 0
35402>>>            Set peLabelPosition to lpTop
35403>>>            Set psLabel to "EfterNamn"
35404>>>        End_Object 
35405>>>
35405>>>        Object oPersonAlder is a cWebForm
35407>>>            Entry_Item Person.Alder
35408>>>            Set piColumnSpan to 1
35409>>>            Set piColumnIndex to 0
35410>>>            Set peLabelPosition to lpTop
35411>>>            Set psLabel to "Alder"
35412>>>        End_Object 
35413>>>
35413>>>        Object oPersonEmail is a cWebForm
35415>>>            Entry_Item Person.Email
35416>>>            Set piColumnSpan to 7
35417>>>            Set piColumnIndex to 0
35418>>>            Set peLabelPosition to lpTop
35419>>>            Set psLabel to "Email"
35420>>>        End_Object 
35421>>>    End_Object 
35422>>>
35422>>>    Object oActionGroup is a cWebMenuGroup
35424>>>
35424>>>        Object oSaveBtn is a cWebMenuItem
35426>>>            Set psCSSClass to "WebSaveMenuItem"
35427>>>            Set psCaption to "Save"
35428>>>
35428>>>            Procedure OnClick
35431>>>                Send Request_Save
35432>>>            End_Procedure
35433>>>
35433>>>        End_Object 
35434>>>
35434>>>        Object oEditBtn is a cWebMenuItem
35436>>>            Set psCSSClass to "WebEditMenuItem"
35437>>>            Set psCaption to "Edit"
35438>>>            Procedure OnClick
35441>>>                Send ChangeEditMode True
35442>>>                Send SetActionButtons
35443>>>            End_Procedure
35444>>>
35444>>>        End_Object 
35445>>>
35445>>>        Object oDeleteBtn is a cWebMenuItem
35447>>>            Set psCSSClass to "WebDeleteMenuItem"
35448>>>            Set psCaption to "Delete"
35449>>>            Set peActionDisplay to adMenu
35450>>>
35450>>>            Procedure OnClick
35453>>>                Send Request_Delete
35454>>>            End_Procedure
35455>>>
35455>>>        End_Object 
35456>>>
35456>>>        Object oCancelChangesBtn is a cWebMenuItem
35458>>>            Set psCSSClass to "WebIcon_Refresh"
35459>>>            Set psCaption to "Clear Changes"
35460>>>            Set peActionDisplay to adMenu
35461>>>            Procedure OnClick
35464>>>                Send RefreshRecord
35465>>>            End_Procedure
35466>>>
35466>>>        End_Object 
35467>>>    End_Object 
35468>>>
35468>>>    Procedure SetActionButtons
35471>>>        tWebNavigateData NavigateData
35471>>>        tWebNavigateData NavigateData
35471>>>        Boolean bHasRecord
35471>>>        Handle hoDD
35471>>>
35471>>>        Get Server to hoDD
35472>>>        Get GetNavigateData to NavigateData
35473>>>        Get HasRecord of hoDD to bHasRecord
35474>>>
35474>>>        // let's hide all buttons and then Show the ones we want
35474>>>        WebSet pbRender of oEditBtn to False
35475>>>        WebSet pbRender of oSaveBtn to False
35476>>>        WebSet pbRender of oCancelChangesBtn to False
35477>>>        WebSet pbRender of oDeleteBtn to False
35478>>>
35478>>>        If (NavigateData.bReadOnly) Begin
35480>>>            WebSet pbRender of oEditBtn to True
35481>>>        End
35481>>>>
35481>>>        Else Begin
35482>>>            WebSet pbRender of oSaveBtn to True
35483>>>            WebSet pbRender of oCancelChangesBtn to True
35484>>>            WebSet pbRender of oDeleteBtn to bHasRecord
35485>>>        End
35485>>>>
35485>>>    End_Procedure
35486>>>
35486>>>    Procedure OnViewSaved Handle hoServer Boolean bChanged
35489>>>        // Close after save
35489>>>        Send NavigateClose Self
35490>>>    End_Procedure
35491>>>
35491>>>    // this will close the view after a delete
35491>>>    Procedure OnViewDeleted Handle hoDDO
35494>>>        Send NavigateClose Self
35495>>>    End_Procedure
35496>>>
35496>>>    Procedure OnNavigateForward tWebNavigateData NavigateData Integer hoInvokingView Integer hoInvokingObject
35499>>>        Case Begin
35499>>>            Case (NavigateData.eNavigateType = nfFromMain)
35501>>>                // If from main, this is a propbably a main file Select to Zoom.
35501>>>                Case Break
35502>>>
35502>>>            Case (NavigateData.eNavigateType = nfFromParent)
35505>>>                // If from parent, this is a constrained drill down.
35505>>>                Case Break
35506>>>
35506>>>            Case (NavigateData.eNavigateType = nfFromChild)
35509>>>                // If from child, this is a probably a parent Zoom from a Zoom.
35509>>>                Case Break
35510>>>
35510>>>            Case Else // must be nfUndefined
35510>>>
35510>>>        Case End
35510>>>
35510>>>        Send SetActionButtons
35511>>>
35511>>>    End_Procedure
35512>>>
35512>>>End_Object 
35513>    Use PersonSelect.wo
Including file: PersonSelect.wo    (C:\DataFlex Projects\FulaTinder\AppSrc\PersonSelect.wo)
35513>>>// C:\DataFlex Projects\FulaTinder\AppSrc\PersonSelect.wo
35513>>>// Personer
35513>>>//
35513>>>
35513>>>Use cWebView.pkg
35513>>>Use cWebList.pkg
35513>>>Use cWebMenuGroup.pkg
35513>>>Use cWebMenuItem.pkg
35513>>>Use cWebColumnButton.pkg
35513>>>Use cWebColumn.pkg
35513>>>Use PersonZoom.wo
35513>>>
35513>>>Use cPersonDataDictionary.dd
35513>>>
35513>>>Object oPersonSelect is a cWebView
35515>>>    Set psCaption to "Personer"
35516>>>    Set peWebViewStyle to wvsDrilldown
35517>>>    Set peViewType to vtSelect
35518>>>    Set piColumnCount to 12
35519>>>    Set pbShowCaption to False
35520>>>    Set piMaxWidth to 1024
35521>>>
35521>>>    Object oPerson_DD is a cPersonDataDictionary
35523>>>    End_Object 
35524>>>
35524>>>    Set Main_DD To oPerson_DD
35525>>>    Set Server  To oPerson_DD
35526>>>
35526>>>
35526>>>    Object oList is a cWebList
35528>>>        Set piColumnSpan to 0
35529>>>        Set psCSSClass to "MobileList"
35530>>>        Set pbServerOnRowClick to True
35531>>>        Set pbFillHeight to True
35532>>>        Set pbShowHeader to False
35533>>>        Set piSortColumn to 0
35534>>>
35534>>>        Object oPersonPersonId is a cWebColumn
35536>>>            Entry_Item Person.PersonId
35537>>>            Set psCaption to "Person.PersonId"
35538>>>            Set piWidth to 46
35539>>>        End_Object 
35540>>>
35540>>>        Object oPersonForNamn is a cWebColumn
35542>>>            Entry_Item Person.ForNamn
35543>>>            Set psCaption to "Person.ForNamn"
35544>>>            Set piWidth to 400
35545>>>        End_Object 
35546>>>
35546>>>        Object oPersonEfterNamn is a cWebColumn
35548>>>            Entry_Item Person.EfterNamn
35549>>>            Set psCaption to "Person.EfterNamn"
35550>>>            Set piWidth to 400
35551>>>        End_Object 
35552>>>
35552>>>        Object oPersonAlder is a cWebColumn
35554>>>            Entry_Item Person.Alder
35555>>>            Set psCaption to "Person.Alder"
35556>>>            Set piWidth to 23
35557>>>        End_Object 
35558>>>
35558>>>        Object oDetailButton is a cWebColumnButton
35560>>>            Set psCaption to "btn"
35561>>>            Set piWidth to 45
35562>>>            Set pbFixedWidth to True
35563>>>            Set pbResizable to False
35564>>>            Set piListRowSpan to 1
35565>>>            Set psBtnCssClass to "WebButtonIcon WebIcon_Info"
35566>>>            Set peAlign to alignRight
35567>>>
35567>>>            WebRegisterPath ntNavigateForward oPersonZoom
35573>>>
35573>>>            Procedure OnClick
35576>>>                Send NavigatePath
35577>>>            End_Procedure
35578>>>
35578>>>            Procedure OnGetNavigateForwardData tWebNavigateData ByRef NavigateData Handle hoToView
35581>>>                Move True to NavigateData.bReadOnly
35582>>>            End_Procedure
35583>>>
35583>>>        End_Object 
35584>>>
35584>>>        WebRegisterPath ntNavigateForward oPersonZoom
35590>>>
35590>>>        Procedure OnRowClick String sRowId
35593>>>            tWebNavigateData NavigateData
35593>>>            tWebNavigateData NavigateData
35593>>>            Get GetNavigateData to NavigateData
35594>>>
35594>>>            Case Begin
35594>>>                Case (NavigateData.eNavigateType = nfFromParent)
35596>>>                    Send NavigateForward of oPersonZoom Self
35597>>>                    Case Break
35598>>>
35598>>>                Case (NavigateData.eNavigateType = nfFromChild)
35601>>>                    Send NavigateClose Self
35602>>>                    Case Break
35603>>>
35603>>>                Case (NavigateData.eNavigateType = nfFromMain)
35606>>>                    Send NavigateClose Self
35607>>>                    Case Break
35608>>>
35608>>>                Case Else // must be nfUndefined
35608>>>                    Send NavigateForward of oPersonZoom Self
35609>>>
35609>>>            Case End
35609>>>        End_Procedure
35610>>>
35610>>>        Procedure OnGetNavigateForwardData tWebNavigateData ByRef NavigateData Handle hoToView
35613>>>            Move True to NavigateData.bReadOnly
35614>>>        End_Procedure
35615>>>
35615>>>    End_Object 
35616>>>
35616>>>    Object oActionGroup is a cWebMenuGroup
35618>>>
35618>>>        Object oSearch is a cWebMenuItem
35620>>>            Set psCSSClass to "WebPromptMenuItem"
35621>>>            Set psCaption to "Search"
35622>>>
35622>>>            Procedure OnClick
35625>>>                Send Search of oList
35626>>>            End_Procedure
35627>>>
35627>>>        End_Object 
35628>>>
35628>>>        Object oNewButton is a cWebMenuItem
35630>>>            Set psCSSClass to "WebClearMenuItem"
35631>>>            Set psCaption to "New"
35632>>>
35632>>>            WebRegisterPath ntNavigateForward oPersonZoom
35638>>>
35638>>>            Procedure OnClick
35641>>>                Send NavigatePath
35642>>>            End_Procedure
35643>>>
35643>>>            Procedure OnGetNavigateForwardData tWebNavigateData ByRef NavigateData Handle hoToView
35646>>>                Move True to NavigateData.bNewRecord
35647>>>            End_Procedure
35648>>>
35648>>>        End_Object 
35649>>>    End_Object 
35650>>>
35650>>>    Procedure OnNavigateForward tWebNavigateData NavigateData Integer hoInvokingView Integer hoInvokingObject
35653>>>        WebSet pbRender of oNewButton to True
35654>>>        WebSet pbRender of oDetailButton to True
35655>>>
35655>>>        Case Begin
35655>>>            Case (NavigateData.eNavigateType = nfFromParent)
35657>>>                // If from parent, this is a constrained drill down
35657>>>                Case Break
35658>>>
35658>>>            Case (NavigateData.eNavigateType = nfFromChild)
35661>>>                // If from child, this is a probably a parent lookup from a Zoom
35661>>>                Case Break
35662>>>
35662>>>            Case (NavigateData.eNavigateType = nfFromMain)
35665>>>                // If from main, this is a probably a main-file lookup from a Zoom
35665>>>                WebSet pbRender of oDetailButton to False
35666>>>                Case Break
35667>>>
35667>>>            Case Else // must be nfUndefined
35667>>>                // This may be the start of a drilldown query or this may be used for some kind of custom query.
35667>>>
35667>>>        Case End
35667>>>
35667>>>    End_Procedure
35668>>>
35668>>>
35668>>>End_Object 
35669>    Set phoDefaultView to oDashboard
35670>
35670>End_Object
35671>
35671>Send StartWebApp of oWebApp
35672>
Summary
Memory Available: 24605634560
Total Warnings : 0
Total Errors   : 0
Total Symbols  : 23484
Total Resources: 0
Total Commands : 35671
Total Windows  : 0
Total Pages    : 0
Static Data    : 458297
Message area   : 246719
Total Blocks   : 16105
